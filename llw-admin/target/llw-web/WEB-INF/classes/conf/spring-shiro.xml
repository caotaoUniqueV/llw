<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	
	
	<!-- ================ Shiro start ================ -->
		<!-- 开启Shiro Spring AOP权限注解 -->
		<aop:config proxy-target-class="true"></aop:config>  
		<bean class=" org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
		    <property name="securityManager" ref="securityManager"/>  
		</bean> 
		
		<!-- 会话Cookie模板 -->
	    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	        <constructor-arg value="sid"/>
	        <property name="httpOnly" value="true"/>
	        <property name="maxAge" value="-1"/> <!-- maxAge=-1表示浏览器关闭时失效此Cookie -->
	    </bean> 
		
		<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
		    <constructor-arg value="rememberMe"/>  
		    <property name="httpOnly" value="true"/>  
		    <property name="maxAge" value="2592000"/><!-- 30天 -->  
		</bean>   
		
		<!-- rememberMe管理器 -->  
		<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
		    <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/> <!-- cipherKey是加密rememberMe Cookie的密钥；默认AES算法 --> 
		    <property name="cookie" ref="rememberMeCookie"/>  
		</bean>   
		
		<!-- 会话验证调度器 -->  
		<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
		    <property name="sessionValidationInterval" value="1800000"/>  <!-- 调度时间间隔，单位毫秒，默认就是1小时 -->
		    <property name="sessionManager" ref="sessionManager"/>  
		</bean> 
		
		<!-- 会话管理器 -->  
		<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
		    <property name="globalSessionTimeout" value="1800000"/>  <!-- 全局过期时间（毫秒为单位） -->
		    <property name="deleteInvalidSessions" value="true"/>  <!-- 如果在会话过期时不想删除过期的会话，可以设置为false -->
		    <property name="sessionValidationSchedulerEnabled" value="true"/>  <!-- 是否开启会话验证器，默认是开启的 -->
		    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>  
		    <property name="sessionDAO" ref="redisSessionDAO"></property>
	        <property name="sessionIdCookieEnabled" value="true"/>
	        <property name="sessionIdCookie" ref="sessionIdCookie"/>
		</bean>  
		
		 <!-- 安全管理器 -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
			<property name="sessionManager" ref="sessionManager"/>
			<property name="rememberMeManager" ref="rememberMeManager"/>  
		</bean>
		
		<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
		<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
			<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
		    <property name="arguments" ref="securityManager"/>  
		</bean>  
		
		<!-- Shiro生命周期处理器-->  
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
		
		<!-- 項目自定义的Realm -->
	    <bean id="ShiroRealm" class="com.linwang.shiro.ShiroRealm" ></bean>
		
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			
			<property name="loginUrl" value="/login.html" /> <!-- 为登录页面地址-->
			
			<property name="successUrl" value="/index.html" /> <!-- 为登录成功页面地址（如果首先访问受保护 URL 登录成功，则跳转到实际访问页面）  -->
			
			<property name="unauthorizedUrl" value="/login.html" /> <!--认证未通过访问的页面 -->
			
			<property name="filters">  
	            <map>  
	                <entry key="permissions" value-ref="permissions"/>   <!-- 自定义角色权限过滤器 -->
	            </map>  
	        </property>  
			
			<property name="filterChainDefinitions"> <!-- anon 表示匿名访问（不需要认证与授权），authc 表示需要认证 -->
				<value>
				/logout.html = anon 
	           	/** = authc
				</value>
			</property>
		</bean>
		
		<!--自定义的permissions Filter-->  
    	<bean id="permissions" class="com.linwang.filter.PermissionsAuthorizationFilter" />
	<!-- ================ Shiro end ================ -->
	
	 <!-- 引入同文件夹下的redis属性配置文件 -->
    <import resource="redis-context.xml"/>
</beans>